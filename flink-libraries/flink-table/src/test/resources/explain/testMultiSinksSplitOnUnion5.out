== Abstract Syntax Tree ==
LogicalProject(total_sum=[AS($0, 'total_sum')])
  LogicalAggregate(group=[{}], TMP_0=[SUM($0)])
    LogicalProject(a=[$0])
      LogicalUnion(all=[true])
        LogicalUnion(all=[true])
          LogicalProject(a=[$0], c=[$2])
            LogicalTableScan(table=[[default_catalog, default_db, t1]])
          LogicalProject(d=[$0], f=[$2])
            LogicalTableScan(table=[[default_catalog, default_db, t2]])
        LogicalProject(a=[$0], c=[$2])
          LogicalTableScan(table=[[default_catalog, default_db, t3]])

LogicalProject(total_min=[AS($0, 'total_min')])
  LogicalAggregate(group=[{}], TMP_1=[MIN($0)])
    LogicalProject(a=[$0])
      LogicalUnion(all=[true])
        LogicalUnion(all=[true])
          LogicalProject(a=[$0], c=[$2])
            LogicalTableScan(table=[[default_catalog, default_db, t1]])
          LogicalProject(d=[$0], f=[$2])
            LogicalTableScan(table=[[default_catalog, default_db, t2]])
        LogicalProject(a=[$0], c=[$2])
          LogicalTableScan(table=[[default_catalog, default_db, t3]])

== Optimized Logical Plan ==
[[IntermediateTable=_DataStreamTable_1]]
StreamExecUnion(all=[true], union=[a])
  StreamExecUnion(all=[true], union=[a])
    StreamExecCalc(select=[a])
      StreamExecDataStreamScan(table=[[default_catalog, default_db, t1]])
    StreamExecCalc(select=[d])
      StreamExecDataStreamScan(table=[[default_catalog, default_db, t2]])
  StreamExecCalc(select=[a])
    StreamExecDataStreamScan(table=[[default_catalog, default_db, t3]])
StreamExecUnion(retract=[true], accMode=[Acc])
  StreamExecUnion(retract=[true], accMode=[Acc])
    StreamExecCalc(retract=[true], accMode=[Acc])
      StreamExecDataStreamScan(retract=[true], accMode=[Acc])
    StreamExecCalc(retract=[true], accMode=[Acc])
      StreamExecDataStreamScan(retract=[true], accMode=[Acc])
  StreamExecCalc(retract=[true], accMode=[Acc])
    StreamExecDataStreamScan(retract=[true], accMode=[Acc])

[[Sink]]
StreamExecSink(fields=[total_sum])
  StreamExecCalc(select=[TMP_0 AS total_sum])
    StreamExecGroupAggregate(select=[SUM(a) AS TMP_0])
      StreamExecExchange(distribution=[single])
        StreamExecDataStreamScan(table=[[default_catalog, default_db, _DataStreamTable_1]])
StreamExecSink(retract=[false], accMode=[Acc])
  StreamExecCalc(retract=[false], accMode=[Acc])
    StreamExecGroupAggregate(retract=[false], accMode=[Acc])
      StreamExecExchange(retract=[true], accMode=[Acc])
        StreamExecDataStreamScan(retract=[true], accMode=[Acc])

[[Sink]]
StreamExecSink(fields=[total_min])
  StreamExecCalc(select=[TMP_1 AS total_min])
    StreamExecGroupAggregate(select=[MIN(a) AS TMP_1])
      StreamExecExchange(distribution=[single])
        StreamExecDataStreamScan(table=[[default_catalog, default_db, _DataStreamTable_1]])
StreamExecSink(retract=[false], accMode=[AccRetract])
  StreamExecCalc(retract=[true], accMode=[AccRetract])
    StreamExecGroupAggregate(retract=[true], accMode=[AccRetract])
      StreamExecExchange(retract=[true], accMode=[Acc])
        StreamExecDataStreamScan(retract=[true], accMode=[Acc])

== Physical Execution Plan ==
 : Data Source
	content : collect elements with CollectionInputFormat

 : Data Source
	content : collect elements with CollectionInputFormat

 : Data Source
	content : collect elements with CollectionInputFormat

	 : Operator
		content : SourceConversion(table:[default_catalog, default_db, t1], fields:(a, b, c))
		ship_strategy : FORWARD

		 : Operator
			content : Calc(select: (a))
			ship_strategy : FORWARD

			 : Operator
				content : SourceConversion(table:[default_catalog, default_db, t2], fields:(d, e, f))
				ship_strategy : FORWARD

				 : Operator
					content : Calc(select: (d))
					ship_strategy : FORWARD

					 : Operator
						content : SourceConversion(table:[default_catalog, default_db, t3], fields:(a, b, c))
						ship_strategy : FORWARD

						 : Operator
							content : Calc(select: (a))
							ship_strategy : FORWARD

							 : Operator
								content : GroupAggregate(select: (SUM(a) AS TMP_0))
								ship_strategy : GLOBAL

								 : Operator
									content : Calc(select: (TMP_0 AS total_sum))
									ship_strategy : FORWARD

									 : Operator
										content : GroupAggregate(select: (MIN(a) AS TMP_1))
										ship_strategy : GLOBAL

										 : Operator
											content : Calc(select: (TMP_1 AS total_min))
											ship_strategy : FORWARD

											 : Operator
												content : SinkConversion to Tuple2
												ship_strategy : FORWARD

												 : Operator
													content : Map
													ship_strategy : FORWARD

													 : Data Sink
														content : Sink: TestingUpsertTableSink(keys=())
														ship_strategy : FORWARD

														 : Data Sink
															content : Sink: TestingRetractTableSink
															ship_strategy : FORWARD

