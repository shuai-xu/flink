== Abstract Syntax Tree ==
LogicalProject(total_sum=[AS($0, 'total_sum')])
  LogicalAggregate(group=[{}], TMP_0=[SUM($0)])
    LogicalProject(a=[$0])
      LogicalUnion(all=[true])
        LogicalUnion(all=[true])
          LogicalTableScan(table=[[t1]])
          LogicalTableScan(table=[[t2]])
        LogicalTableScan(table=[[t3]])

LogicalProject(total_min=[AS($0, 'total_min')])
  LogicalAggregate(group=[{}], TMP_1=[MIN($0)])
    LogicalProject(a=[$0])
      LogicalUnion(all=[true])
        LogicalUnion(all=[true])
          LogicalTableScan(table=[[t1]])
          LogicalTableScan(table=[[t2]])
        LogicalTableScan(table=[[t3]])

LogicalProject(a=[$0])
  LogicalUnion(all=[true])
    LogicalTableScan(table=[[t1]])
    LogicalTableScan(table=[[t2]])

== Optimized Logical Plan ==
[[IntermediateTable=_DataStreamTable_3]]
StreamExecDataStreamScan(table=[[t1]])
StreamExecDataStreamScan(retract=[true], accMode=[Acc])

[[IntermediateTable=_DataStreamTable_4]]
StreamExecDataStreamScan(table=[[t2]])
StreamExecDataStreamScan(retract=[true], accMode=[Acc])

[[IntermediateTable=_DataStreamTable_5]]
StreamExecDataStreamScan(table=[[t3]])
StreamExecDataStreamScan(retract=[true], accMode=[Acc])

[[Sink]]
StreamExecSink(fields=[total_sum])
  StreamExecCalc(select=[TMP_0 AS total_sum])
    StreamExecGroupAggregate(select=[SUM(a) AS TMP_0])
      StreamExecExchange(distribution=[single])
        StreamExecUnion(all=[true], union=[a])
          StreamExecUnion(all=[true], union=[a])
            StreamExecCalc(select=[a])
              StreamExecDataStreamScan(table=[[_DataStreamTable_3]])
            StreamExecCalc(select=[d])
              StreamExecDataStreamScan(table=[[_DataStreamTable_4]])
          StreamExecCalc(select=[a])
            StreamExecDataStreamScan(table=[[_DataStreamTable_5]])
StreamExecSink(retract=[false], accMode=[Acc])
  StreamExecCalc(retract=[false], accMode=[Acc])
    StreamExecGroupAggregate(retract=[false], accMode=[Acc])
      StreamExecExchange(retract=[true], accMode=[Acc])
        StreamExecUnion(retract=[true], accMode=[Acc])
          StreamExecUnion(retract=[true], accMode=[Acc])
            StreamExecCalc(retract=[true], accMode=[Acc])
              StreamExecDataStreamScan(retract=[true], accMode=[Acc])
            StreamExecCalc(retract=[true], accMode=[Acc])
              StreamExecDataStreamScan(retract=[true], accMode=[Acc])
          StreamExecCalc(retract=[true], accMode=[Acc])
            StreamExecDataStreamScan(retract=[true], accMode=[Acc])

[[Sink]]
StreamExecSink(fields=[total_min])
  StreamExecCalc(select=[TMP_1 AS total_min])
    StreamExecGroupAggregate(select=[MIN(a) AS TMP_1])
      StreamExecExchange(distribution=[single])
        StreamExecUnion(all=[true], union=[a])
          StreamExecUnion(all=[true], union=[a])
            StreamExecCalc(select=[a])
              StreamExecDataStreamScan(table=[[_DataStreamTable_3]])
            StreamExecCalc(select=[d])
              StreamExecDataStreamScan(table=[[_DataStreamTable_4]])
          StreamExecCalc(select=[a])
            StreamExecDataStreamScan(table=[[_DataStreamTable_5]])
StreamExecSink(retract=[false], accMode=[AccRetract])
  StreamExecCalc(retract=[true], accMode=[AccRetract])
    StreamExecGroupAggregate(retract=[true], accMode=[AccRetract])
      StreamExecExchange(retract=[true], accMode=[Acc])
        StreamExecUnion(retract=[true], accMode=[Acc])
          StreamExecUnion(retract=[true], accMode=[Acc])
            StreamExecCalc(retract=[true], accMode=[Acc])
              StreamExecDataStreamScan(retract=[true], accMode=[Acc])
            StreamExecCalc(retract=[true], accMode=[Acc])
              StreamExecDataStreamScan(retract=[true], accMode=[Acc])
          StreamExecCalc(retract=[true], accMode=[Acc])
            StreamExecDataStreamScan(retract=[true], accMode=[Acc])

[[Sink]]
StreamExecSink(fields=[a])
  StreamExecUnion(all=[true], union=[a])
    StreamExecCalc(select=[a])
      StreamExecDataStreamScan(table=[[_DataStreamTable_3]])
    StreamExecCalc(select=[d])
      StreamExecDataStreamScan(table=[[_DataStreamTable_4]])
StreamExecSink(retract=[false], accMode=[Acc])
  StreamExecUnion(retract=[false], accMode=[Acc])
    StreamExecCalc(retract=[false], accMode=[Acc])
      StreamExecDataStreamScan(retract=[false], accMode=[Acc])
    StreamExecCalc(retract=[false], accMode=[Acc])
      StreamExecDataStreamScan(retract=[false], accMode=[Acc])

== Physical Execution Plan ==
 : Data Source
	content : collect elements with CollectionInputFormat

 : Data Source
	content : collect elements with CollectionInputFormat

 : Data Source
	content : collect elements with CollectionInputFormat

	 : Operator
		content : SourceConversion(table:[t1], fields:(a, b, c))
		ship_strategy : FORWARD

		 : Operator
			content : SourceConversion(table:[t2], fields:(d, e, f))
			ship_strategy : FORWARD

			 : Operator
				content : SourceConversion(table:[t3], fields:(a, b, c))
				ship_strategy : FORWARD

				 : Operator
					content : Calc(select: (a))
					ship_strategy : FORWARD

					 : Operator
						content : Calc(select: (d))
						ship_strategy : FORWARD

						 : Operator
							content : Calc(select: (a))
							ship_strategy : FORWARD

							 : Operator
								content : GroupAggregate(select: (SUM(a) AS TMP_0))
								ship_strategy : GLOBAL

								 : Operator
									content : Calc(select: (TMP_0 AS total_sum))
									ship_strategy : FORWARD

									 : Operator
										content : Calc(select: (a))
										ship_strategy : FORWARD

										 : Operator
											content : Calc(select: (d))
											ship_strategy : FORWARD

											 : Operator
												content : Calc(select: (a))
												ship_strategy : FORWARD

												 : Operator
													content : GroupAggregate(select: (MIN(a) AS TMP_1))
													ship_strategy : GLOBAL

													 : Operator
														content : Calc(select: (TMP_1 AS total_min))
														ship_strategy : FORWARD

														 : Operator
															content : SinkConversion to Tuple2
															ship_strategy : FORWARD

															 : Operator
																content : Map
																ship_strategy : FORWARD

																 : Operator
																	content : Calc(select: (a))
																	ship_strategy : FORWARD

																	 : Operator
																		content : Calc(select: (d))
																		ship_strategy : FORWARD

																		 : Data Sink
																			content : Sink: TestingUpsertTableSink(keys=())
																			ship_strategy : FORWARD

																			 : Data Sink
																				content : Sink: TestingRetractTableSink
																				ship_strategy : FORWARD

																				 : Data Sink
																					content : Sink: TestingUpsertTableSink(keys=())
																					ship_strategy : FORWARD

