<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testAggFollowedWithRightJoin">
    <Resource name="plan">
      <![CDATA[
StreamExecGroupAggregate(groupBy=[a], select=[a, CountDistinct_RETRACT(c) AS TMP_0], updateAsRetraction=[false], accMode=[Acc])
+- StreamExecExchange(distribution=[hash[a]], updateAsRetraction=[true], accMode=[AccRetract])
   +- StreamExecCalc(select=[a, c], updateAsRetraction=[true], accMode=[AccRetract])
      +- StreamExecJoin(where=[=(b, bb)], join=[a, b, bb, c], joinType=[RightOuterJoin], updateAsRetraction=[true], accMode=[AccRetract])
         :- StreamExecExchange(distribution=[hash[b]], updateAsRetraction=[true], accMode=[Acc])
         :  +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
         +- StreamExecExchange(distribution=[hash[bb]], updateAsRetraction=[true], accMode=[Acc])
            +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggFollowedWithFullJoin">
    <Resource name="plan">
      <![CDATA[
StreamExecGroupAggregate(groupBy=[a], select=[a, CountDistinct_RETRACT(c) AS TMP_0], updateAsRetraction=[false], accMode=[Acc])
+- StreamExecExchange(distribution=[hash[a]], updateAsRetraction=[true], accMode=[AccRetract])
   +- StreamExecCalc(select=[a, c], updateAsRetraction=[true], accMode=[AccRetract])
      +- StreamExecJoin(where=[=(b, bb)], join=[a, b, bb, c], joinType=[FullOuterJoin], updateAsRetraction=[true], accMode=[AccRetract])
         :- StreamExecExchange(distribution=[hash[b]], updateAsRetraction=[true], accMode=[Acc])
         :  +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
         +- StreamExecExchange(distribution=[hash[bb]], updateAsRetraction=[true], accMode=[Acc])
            +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testAggFollowedWithLeftJoin">
    <Resource name="plan">
      <![CDATA[
StreamExecGroupAggregate(groupBy=[a], select=[a, CountDistinct_RETRACT(c) AS TMP_0], updateAsRetraction=[false], accMode=[Acc])
+- StreamExecExchange(distribution=[hash[a]], updateAsRetraction=[true], accMode=[AccRetract])
   +- StreamExecCalc(select=[a, c], updateAsRetraction=[true], accMode=[AccRetract])
      +- StreamExecJoin(where=[=(b, bb)], join=[a, b, bb, c], joinType=[LeftOuterJoin], updateAsRetraction=[true], accMode=[AccRetract])
         :- StreamExecExchange(distribution=[hash[b]], updateAsRetraction=[true], accMode=[Acc])
         :  +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
         +- StreamExecExchange(distribution=[hash[bb]], updateAsRetraction=[true], accMode=[Acc])
            +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testBinaryNode">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[count, TMP_1 AS frequency], updateAsRetraction=[false], accMode=[Acc])
+- StreamExecGroupAggregate(groupBy=[count], select=[count, COUNT_RETRACT(count) AS TMP_1], updateAsRetraction=[false], accMode=[Acc])
   +- StreamExecExchange(distribution=[hash[count]], updateAsRetraction=[true], accMode=[AccRetract])
      +- StreamExecUnion(all=[true], union=[count], updateAsRetraction=[true], accMode=[AccRetract])
         :- StreamExecCalc(select=[CAST(TMP_0) AS count], updateAsRetraction=[true], accMode=[AccRetract])
         :  +- StreamExecGroupAggregate(groupBy=[word], select=[word, COUNT(number) AS TMP_0], updateAsRetraction=[true], accMode=[AccRetract])
         :     +- StreamExecExchange(distribution=[hash[word]], updateAsRetraction=[true], accMode=[Acc])
         :        +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
         +- StreamExecCalc(select=[count_r], updateAsRetraction=[true], accMode=[Acc])
            +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFullJoin">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[a, b, c], updateAsRetraction=[false], accMode=[AccRetract])
+- StreamExecJoin(where=[=(b, bb)], join=[a, b, bb, c], joinType=[FullOuterJoin], updateAsRetraction=[false], accMode=[AccRetract])
   :- StreamExecExchange(distribution=[hash[b]], updateAsRetraction=[true], accMode=[Acc])
   :  +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
   +- StreamExecExchange(distribution=[hash[bb]], updateAsRetraction=[true], accMode=[Acc])
      +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupBy">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[TMP_0], updateAsRetraction=[false], accMode=[Acc])
+- StreamExecGroupAggregate(groupBy=[word], select=[word, COUNT(number) AS TMP_0], updateAsRetraction=[false], accMode=[Acc])
   +- StreamExecExchange(distribution=[hash[word]], updateAsRetraction=[true], accMode=[Acc])
      +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupWindow">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[word, TMP_0 AS count], updateAsRetraction=[false], accMode=[Acc])
+- StreamExecGroupWindowAggregate(groupBy=[word], window=[TumblingGroupWindow('w, 'rowtime, 50.millis)], select=[word, COUNT(number) AS TMP_0], updateAsRetraction=[false], accMode=[Acc])
   +- StreamExecExchange(distribution=[hash[word]], updateAsRetraction=[true], accMode=[Acc])
      +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftJoin">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[a, b, c], updateAsRetraction=[false], accMode=[AccRetract])
+- StreamExecJoin(where=[=(b, bb)], join=[a, b, bb, c], joinType=[LeftOuterJoin], updateAsRetraction=[false], accMode=[AccRetract])
   :- StreamExecExchange(distribution=[hash[b]], updateAsRetraction=[true], accMode=[Acc])
   :  +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
   +- StreamExecExchange(distribution=[hash[bb]], updateAsRetraction=[true], accMode=[Acc])
      +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testGroupWindowWithEmitStrategy">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[word, TMP_0 AS count], updateAsRetraction=[false], accMode=[Acc])
+- StreamExecGroupWindowAggregate(groupBy=[word], window=[TumblingGroupWindow('w, 'rowtime, 50.millis)], select=[word, COUNT(number) AS TMP_0], emit=[early delay 10 millisecond, late no delay], updateAsRetraction=[false], accMode=[Acc])
   +- StreamExecExchange(distribution=[hash[word]], updateAsRetraction=[true], accMode=[Acc])
      +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testJoinKeysDontEqualUniqueKeys">
    <Resource name="plan">
      <![CDATA[
StreamExecJoin(where=[=(pk_l, a_r)], join=[pk_l, a_l, pk_r, a_r], joinType=[InnerJoin], updateAsRetraction=[false], accMode=[AccRetract])
:- StreamExecExchange(distribution=[hash[pk_l]], updateAsRetraction=[false], accMode=[Acc])
:  +- StreamExecCalc(select=[pk_l, TMP_0 AS a_l], updateAsRetraction=[false], accMode=[Acc])
:     +- StreamExecGroupAggregate(groupBy=[pk_l], select=[pk_l, MAX(a_l) AS TMP_0], updateAsRetraction=[false], accMode=[Acc])
:        +- StreamExecExchange(distribution=[hash[pk_l]], updateAsRetraction=[true], accMode=[Acc])
:           +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
+- StreamExecExchange(distribution=[hash[a_r]], updateAsRetraction=[true], accMode=[AccRetract])
   +- StreamExecCalc(select=[pk_r, TMP_1 AS a_r], updateAsRetraction=[true], accMode=[AccRetract])
      +- StreamExecGroupAggregate(groupBy=[pk_r], select=[pk_r, MAX(a_r) AS TMP_1], updateAsRetraction=[true], accMode=[AccRetract])
         +- StreamExecExchange(distribution=[hash[pk_r]], updateAsRetraction=[true], accMode=[Acc])
            +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testJoinKeysEqualUniqueKeys">
    <Resource name="plan">
      <![CDATA[
StreamExecJoin(where=[=(pk_l, pk_r)], join=[pk_l, a_l, pk_r, a_r], joinType=[InnerJoin], updateAsRetraction=[false], accMode=[Acc])
:- StreamExecExchange(distribution=[hash[pk_l]], updateAsRetraction=[false], accMode=[Acc])
:  +- StreamExecCalc(select=[pk_l, TMP_0 AS a_l], updateAsRetraction=[false], accMode=[Acc])
:     +- StreamExecGroupAggregate(groupBy=[pk_l], select=[pk_l, MAX(a_l) AS TMP_0], updateAsRetraction=[false], accMode=[Acc])
:        +- StreamExecExchange(distribution=[hash[pk_l]], updateAsRetraction=[true], accMode=[Acc])
:           +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
+- StreamExecExchange(distribution=[hash[pk_r]], updateAsRetraction=[false], accMode=[Acc])
   +- StreamExecCalc(select=[pk_r, TMP_1 AS a_r], updateAsRetraction=[false], accMode=[Acc])
      +- StreamExecGroupAggregate(groupBy=[pk_r], select=[pk_r, MAX(a_r) AS TMP_1], updateAsRetraction=[false], accMode=[Acc])
         +- StreamExecExchange(distribution=[hash[pk_r]], updateAsRetraction=[true], accMode=[Acc])
            +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testJoinLeftRightWithoutUniqueKeys">
    <Resource name="plan">
      <![CDATA[
StreamExecJoin(where=[=(pk_l, a_r)], join=[pk_l, a_l, pk_r, a_r], joinType=[InnerJoin], updateAsRetraction=[false], accMode=[Acc])
:- StreamExecExchange(distribution=[hash[pk_l]], updateAsRetraction=[true], accMode=[Acc])
:  +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
+- StreamExecExchange(distribution=[hash[a_r]], updateAsRetraction=[true], accMode=[Acc])
   +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testOverWindow">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[word, w0$o0 AS $1], updateAsRetraction=[false], accMode=[Acc])
+- StreamExecOverAggregate(partitionBy=[word], orderBy=[proctime ASC], window=[ ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW], select=[word, number, proctime, COUNT(number) AS w0$o0], updateAsRetraction=[false], accMode=[Acc])
   +- StreamExecExchange(distribution=[hash[word]], updateAsRetraction=[true], accMode=[Acc])
      +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRightJoin">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[a, b, c], updateAsRetraction=[false], accMode=[AccRetract])
+- StreamExecJoin(where=[=(b, bb)], join=[a, b, bb, c], joinType=[RightOuterJoin], updateAsRetraction=[false], accMode=[AccRetract])
   :- StreamExecExchange(distribution=[hash[b]], updateAsRetraction=[true], accMode=[Acc])
   :  +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
   +- StreamExecExchange(distribution=[hash[bb]], updateAsRetraction=[true], accMode=[Acc])
      +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_1]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testSelect">
    <Resource name="plan">
      <![CDATA[
StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[false], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testTwoGroupWindow">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[word, TMP_2 AS sum], updateAsRetraction=[false], accMode=[Acc])
+- StreamExecGroupWindowAggregate(groupBy=[word], window=[TumblingGroupWindow('w2, 'w_rowtime, 1000.millis)], select=[word, $SUM0(count) AS TMP_2], updateAsRetraction=[false], accMode=[Acc])
   +- StreamExecExchange(distribution=[hash[word]], updateAsRetraction=[true], accMode=[Acc])
      +- StreamExecCalc(select=[word, TMP_0 AS count, TMP_1 AS w_rowtime], updateAsRetraction=[true], accMode=[Acc])
         +- StreamExecGroupWindowAggregate(groupBy=[word], window=[TumblingGroupWindow('w, 'rowtime, 50.millis)], properties=[TMP_1], select=[word, COUNT(number) AS TMP_0, rowtime('w) AS TMP_1], updateAsRetraction=[true], accMode=[Acc])
            +- StreamExecExchange(distribution=[hash[word]], updateAsRetraction=[true], accMode=[Acc])
               +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testTwoGroupBy">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[count, TMP_1 AS frequency], updateAsRetraction=[false], accMode=[Acc])
+- StreamExecGroupAggregate(groupBy=[count], select=[count, COUNT_RETRACT(count) AS TMP_1], updateAsRetraction=[false], accMode=[Acc])
   +- StreamExecExchange(distribution=[hash[count]], updateAsRetraction=[true], accMode=[AccRetract])
      +- StreamExecCalc(select=[TMP_0 AS count], updateAsRetraction=[true], accMode=[AccRetract])
         +- StreamExecGroupAggregate(groupBy=[word], select=[word, COUNT(number) AS TMP_0], updateAsRetraction=[true], accMode=[AccRetract])
            +- StreamExecExchange(distribution=[hash[word]], updateAsRetraction=[true], accMode=[Acc])
               +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testTwoGroupWindowWithEmitStrategy">
    <Resource name="plan">
      <![CDATA[
StreamExecCalc(select=[word, TMP_2 AS sum], updateAsRetraction=[false], accMode=[Acc])
+- StreamExecGroupWindowAggregate(groupBy=[word], window=[TumblingGroupWindow('w2, 'w_rowtime, 1000.millis)], select=[word, $SUM0(count) AS TMP_2], emit=[early delay 10 millisecond, late no delay], updateAsRetraction=[false], accMode=[Acc])
   +- StreamExecExchange(distribution=[hash[word]], updateAsRetraction=[true], accMode=[AccRetract])
      +- StreamExecCalc(select=[word, TMP_0 AS count, TMP_1 AS w_rowtime], updateAsRetraction=[true], accMode=[AccRetract])
         +- StreamExecGroupWindowAggregate(groupBy=[word], window=[TumblingGroupWindow('w, 'rowtime, 50.millis)], properties=[TMP_1], select=[word, COUNT(number) AS TMP_0, rowtime('w) AS TMP_1], emit=[early delay 10 millisecond, late no delay], updateAsRetraction=[true], accMode=[AccRetract])
            +- StreamExecExchange(distribution=[hash[word]], updateAsRetraction=[true], accMode=[Acc])
               +- StreamExecDataStreamScan(table=[[builtin, default, _DataStreamTable_0]], updateAsRetraction=[true], accMode=[Acc])
]]>
    </Resource>
  </TestCase>
</Root>
