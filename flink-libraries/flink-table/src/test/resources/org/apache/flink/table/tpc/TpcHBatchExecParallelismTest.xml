<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="test[01]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC])
+- LogicalAggregate(group=[{0, 1}], sum_qty=[SUM($2)], sum_base_price=[SUM($3)], sum_disc_price=[SUM($4)], sum_charge=[SUM($5)], avg_qty=[AVG($2)], avg_price=[AVG($3)], avg_disc=[AVG($6)], count_order=[COUNT()])
   +- LogicalProject(l_returnflag=[$8], l_linestatus=[$9], l_quantity=[$4], l_extendedprice=[$5], $f4=[*($5, -(1, $6))], $f5=[*(*($5, -(1, $6)), +(1, $7))], l_discount=[$6])
      +- LogicalFilter(condition=[<=($10, -(1998-12-01, 10368000000))])
         +- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
SortLimit(partition=[1])
+- Exchange(partition=[1])
   +- SortLimit(partition=[8])
      +- HashAggregate(partition=[8])
         +- Exchange(partition=[8])
            +- LocalHashAggregate(partition=[30])
               +- Calc(partition=[30])
                  +- TableSourceScan(partition=[30])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[02]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$0], sort1=[$2], sort2=[$1], sort3=[$3], dir0=[DESC], dir1=[ASC], dir2=[ASC], dir3=[ASC], fetch=[100])
+- LogicalProject(s_acctbal=[$14], s_name=[$10], n_name=[$22], p_partkey=[$0], p_mfgr=[$2], s_address=[$11], s_phone=[$13], s_comment=[$15])
   +- LogicalFilter(condition=[AND(=($0, $16), =($9, $17), =($5, 41), LIKE($4, '%NICKEL'), =($12, $21), =($23, $25), =($26, 'EUROPE'), =($19, $SCALAR_QUERY({
LogicalAggregate(group=[{}], EXPR$0=[MIN($0)])
  LogicalProject(ps_supplycost=[$3])
    LogicalFilter(condition=[AND(=($cor0.p_partkey, $0), =($5, $1), =($8, $12), =($14, $16), =($17, 'EUROPE'))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalTableScan(table=[[partsupp, source: [selectedFields=[ps_partkey, ps_suppkey, ps_availqty, ps_supplycost, ps_comment]]]])
            LogicalTableScan(table=[[supplier, source: [selectedFields=[s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment]]]])
          LogicalTableScan(table=[[nation, source: [selectedFields=[n_nationkey, n_name, n_regionkey, n_comment]]]])
        LogicalTableScan(table=[[region, source: [selectedFields=[r_regionkey, r_name, r_comment]]]])
})))], variablesSet=[[$cor0]])
      +- LogicalJoin(condition=[true], joinType=[inner])
         :- LogicalJoin(condition=[true], joinType=[inner])
         :  :- LogicalJoin(condition=[true], joinType=[inner])
         :  :  :- LogicalJoin(condition=[true], joinType=[inner])
         :  :  :  :- LogicalTableScan(table=[[part, source: [selectedFields=[p_partkey, p_name, p_mfgr, p_brand, p_type, p_size, p_container, p_retailprice, p_comment]]]])
         :  :  :  +- LogicalTableScan(table=[[supplier, source: [selectedFields=[s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment]]]])
         :  :  +- LogicalTableScan(table=[[partsupp, source: [selectedFields=[ps_partkey, ps_suppkey, ps_availqty, ps_supplycost, ps_comment]]]])
         :  +- LogicalTableScan(table=[[nation, source: [selectedFields=[n_nationkey, n_name, n_regionkey, n_comment]]]])
         +- LogicalTableScan(table=[[region, source: [selectedFields=[r_regionkey, r_name, r_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(partition=[1])
+- SortLimit(partition=[1])
   +- Exchange(partition=[1])
      +- SortLimit(partition=[8])
         +- NestedLoopJoin(partition=[8])
            :- Calc(partition=[8])
            :  +- NestedLoopJoin(partition=[8])
            :     :- Calc(partition=[8])
            :     :  +- HashJoin(partition=[8])
            :     :     :- Exchange(partition=[8])
            :     :     :  +- Calc(partition=[8])
            :     :     :     +- HashJoin(partition=[8])
            :     :     :        :- Exchange(partition=[8])
            :     :     :        :  +- NestedLoopJoin(partition=[1])
            :     :     :        :     :- Exchange(partition=[8])
            :     :     :        :     :  +- Calc(partition=[1])
            :     :     :        :     :     +- TableSourceScan(partition=[1])
            :     :     :        :     +- TableSourceScan(partition=[1])
            :     :     :        +- Exchange(partition=[8])
            :     :     :           +- TableSourceScan(partition=[4])
            :     :     +- Exchange(partition=[8])
            :     :        +- TableSourceScan(partition=[1])
            :     +- Exchange(partition=[8])
            :        +- Calc(partition=[1])
            :           +- TableSourceScan(partition=[1])
            +- Exchange(partition=[8])
               +- HashAggregate(partition=[8])
                  +- Exchange(partition=[8])
                     +- LocalHashAggregate(partition=[8])
                        +- Calc(partition=[8])
                           +- NestedLoopJoin(partition=[8])
                              :- Calc(partition=[8])
                              :  +- HashJoin(partition=[8])
                              :     :- Exchange(partition=[8])
                              :     :  +- Calc(partition=[8])
                              :     :     +- HashJoin(partition=[8])
                              :     :        :- Exchange(partition=[8])
                              :     :        :  +- Calc(partition=[4])
                              :     :        :     +- TableSourceScan(partition=[4])
                              :     :        +- Exchange(partition=[8])
                              :     :           +- TableSourceScan(partition=[1])
                              :     +- Exchange(partition=[8])
                              :        +- TableSourceScan(partition=[1])
                              +- Exchange(partition=[8])
                                 +- Calc(partition=[1])
                                    +- TableSourceScan(partition=[1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[03]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$1], sort1=[$2], dir0=[DESC], dir1=[ASC], fetch=[10])
+- LogicalProject(l_orderkey=[$0], revenue=[$3], o_orderdate=[$1], o_shippriority=[$2])
   +- LogicalAggregate(group=[{0, 1, 2}], revenue=[SUM($3)])
      +- LogicalProject(l_orderkey=[$17], o_orderdate=[$12], o_shippriority=[$15], $f3=[*($22, -(1, $23))])
         +- LogicalFilter(condition=[AND(=($6, 'HOUSEHOLD'), =($0, $9), =($17, $8), <($12, 1995-03-25), >($27, 1995-03-25))])
            +- LogicalJoin(condition=[true], joinType=[inner])
               :- LogicalJoin(condition=[true], joinType=[inner])
               :  :- LogicalTableScan(table=[[customer, source: [selectedFields=[c_custkey, c_name, c_address, c_nationkey, c_phone, c_acctbal, c_mktsegment, c_comment]]]])
               :  +- LogicalTableScan(table=[[orders, source: [selectedFields=[o_orderkey, o_custkey, o_orderstatus, o_totalprice, o_orderdate, o_orderpriority, o_clerk, o_shippriority, o_comment]]]])
               +- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(partition=[1])
+- SortLimit(partition=[1])
   +- Exchange(partition=[1])
      +- SortLimit(partition=[8])
         +- HashAggregate(partition=[8])
            +- Exchange(partition=[8])
               +- LocalHashAggregate(partition=[8])
                  +- Calc(partition=[8])
                     +- HashJoin(partition=[8])
                        :- Exchange(partition=[8])
                        :  +- Calc(partition=[8])
                        :     +- HashJoin(partition=[8])
                        :        :- Exchange(partition=[8])
                        :        :  +- Calc(partition=[1])
                        :        :     +- TableSourceScan(partition=[1])
                        :        +- Exchange(partition=[8])
                        :           +- Calc(partition=[7])
                        :              +- TableSourceScan(partition=[7])
                        +- Exchange(partition=[8])
                           +- Calc(partition=[30])
                              +- TableSourceScan(partition=[30])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[04]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$0], dir0=[ASC])
+- LogicalAggregate(group=[{0}], order_count=[COUNT()])
   +- LogicalProject(o_orderpriority=[$5])
      +- LogicalFilter(condition=[AND(>=($4, 1996-10-01), <($4, DATETIME_PLUS(1996-10-01, 3)), EXISTS({
LogicalFilter(condition=[AND(=($0, $cor0.o_orderkey), <($11, $12))])
  LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
}))], variablesSet=[[$cor0]])
         +- LogicalTableScan(table=[[orders, source: [selectedFields=[o_orderkey, o_custkey, o_orderstatus, o_totalprice, o_orderdate, o_orderpriority, o_clerk, o_shippriority, o_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
SortLimit(partition=[1])
+- Exchange(partition=[1])
   +- SortLimit(partition=[8])
      +- HashAggregate(partition=[8])
         +- Exchange(partition=[8])
            +- LocalHashAggregate(partition=[8])
               +- Calc(partition=[8])
                  +- HashJoin(partition=[8])
                     :- Exchange(partition=[8])
                     :  +- Calc(partition=[7])
                     :     +- TableSourceScan(partition=[7])
                     +- Exchange(partition=[8])
                        +- Calc(partition=[30])
                           +- TableSourceScan(partition=[30])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[05]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$1], dir0=[DESC])
+- LogicalAggregate(group=[{0}], revenue=[SUM($1)])
   +- LogicalProject(n_name=[$41], $f1=[*($22, -(1, $23))])
      +- LogicalFilter(condition=[AND(=($0, $9), =($17, $8), =($19, $33), =($3, $36), =($36, $40), =($42, $44), =($45, 'EUROPE'), >=($12, 1997-01-01), <($12, DATETIME_PLUS(1997-01-01, 12)))])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalJoin(condition=[true], joinType=[inner])
            :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :  :- LogicalTableScan(table=[[customer, source: [selectedFields=[c_custkey, c_name, c_address, c_nationkey, c_phone, c_acctbal, c_mktsegment, c_comment]]]])
            :  :  :  :  +- LogicalTableScan(table=[[orders, source: [selectedFields=[o_orderkey, o_custkey, o_orderstatus, o_totalprice, o_orderdate, o_orderpriority, o_clerk, o_shippriority, o_comment]]]])
            :  :  :  +- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
            :  :  +- LogicalTableScan(table=[[supplier, source: [selectedFields=[s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment]]]])
            :  +- LogicalTableScan(table=[[nation, source: [selectedFields=[n_nationkey, n_name, n_regionkey, n_comment]]]])
            +- LogicalTableScan(table=[[region, source: [selectedFields=[r_regionkey, r_name, r_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
SortLimit(partition=[1])
+- Exchange(partition=[1])
   +- SortLimit(partition=[8])
      +- SortAggregate(partition=[8])
         +- Sort(partition=[8])
            +- Exchange(partition=[8])
               +- LocalSortAggregate(partition=[8])
                  +- Sort(partition=[8])
                     +- Calc(partition=[8])
                        +- NestedLoopJoin(partition=[8])
                           :- Calc(partition=[8])
                           :  +- HashJoin(partition=[8])
                           :     :- Exchange(partition=[8])
                           :     :  +- Calc(partition=[8])
                           :     :     +- HashJoin(partition=[8])
                           :     :        :- Exchange(partition=[8])
                           :     :        :  +- Calc(partition=[8])
                           :     :        :     +- HashJoin(partition=[8])
                           :     :        :        :- Exchange(partition=[8])
                           :     :        :        :  +- Calc(partition=[8])
                           :     :        :        :     +- HashJoin(partition=[8])
                           :     :        :        :        :- Exchange(partition=[8])
                           :     :        :        :        :  +- TableSourceScan(partition=[1])
                           :     :        :        :        +- Exchange(partition=[8])
                           :     :        :        :           +- Calc(partition=[7])
                           :     :        :        :              +- TableSourceScan(partition=[7])
                           :     :        :        +- Exchange(partition=[8])
                           :     :        :           +- TableSourceScan(partition=[30])
                           :     :        +- Exchange(partition=[8])
                           :     :           +- TableSourceScan(partition=[1])
                           :     +- Exchange(partition=[8])
                           :        +- TableSourceScan(partition=[1])
                           +- Exchange(partition=[8])
                              +- Calc(partition=[1])
                                 +- TableSourceScan(partition=[1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[06]">
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], revenue=[SUM($0)])
+- LogicalProject($f0=[*($5, $6)])
   +- LogicalFilter(condition=[AND(>=($10, 1997-01-01), <($10, DATETIME_PLUS(1997-01-01, 12)), >=($6, -(0.03, 0.01)), <=($6, +(0.03, 0.01)), <($4, 24))])
      +- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
SortAggregate(partition=[1])
+- Exchange(partition=[1])
   +- LocalSortAggregate(partition=[30])
      +- Calc(partition=[30])
         +- TableSourceScan(partition=[30])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[07]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$0], sort1=[$1], sort2=[$2], dir0=[ASC], dir1=[ASC], dir2=[ASC])
+- LogicalAggregate(group=[{0, 1, 2}], revenue=[SUM($3)])
   +- LogicalProject(supp_nation=[$41], cust_nation=[$45], l_year=[EXTRACT(FLAG(YEAR), $17)], volume=[*($12, -(1, $13))])
      +- LogicalFilter(condition=[AND(=($0, $9), =($23, $7), =($32, $24), =($3, $40), =($35, $44), OR(AND(=($41, 'EGYPT'), =($45, 'UNITED STATES')), AND(=($41, 'UNITED STATES'), =($45, 'EGYPT'))), >=($17, 1995-01-01), <=($17, 1996-12-31))])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalJoin(condition=[true], joinType=[inner])
            :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :  :- LogicalTableScan(table=[[supplier, source: [selectedFields=[s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment]]]])
            :  :  :  :  +- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
            :  :  :  +- LogicalTableScan(table=[[orders, source: [selectedFields=[o_orderkey, o_custkey, o_orderstatus, o_totalprice, o_orderdate, o_orderpriority, o_clerk, o_shippriority, o_comment]]]])
            :  :  +- LogicalTableScan(table=[[customer, source: [selectedFields=[c_custkey, c_name, c_address, c_nationkey, c_phone, c_acctbal, c_mktsegment, c_comment]]]])
            :  +- LogicalTableScan(table=[[nation, source: [selectedFields=[n_nationkey, n_name, n_regionkey, n_comment]]]])
            +- LogicalTableScan(table=[[nation, source: [selectedFields=[n_nationkey, n_name, n_regionkey, n_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
SortLimit(partition=[1])
+- Exchange(partition=[1])
   +- SortLimit(partition=[8])
      +- SortAggregate(partition=[8])
         +- Sort(partition=[8])
            +- Exchange(partition=[8])
               +- Calc(partition=[8])
                  +- HashJoin(partition=[8])
                     :- Exchange(partition=[8])
                     :  +- Calc(partition=[8])
                     :     +- HashJoin(partition=[8])
                     :        :- Exchange(partition=[8])
                     :        :  +- Calc(partition=[8])
                     :        :     +- HashJoin(partition=[8])
                     :        :        :- Exchange(partition=[8])
                     :        :        :  +- Calc(partition=[8])
                     :        :        :     +- HashJoin(partition=[8])
                     :        :        :        :- Exchange(partition=[8])
                     :        :        :        :  +- Calc(partition=[8])
                     :        :        :        :     +- HashJoin(partition=[8])
                     :        :        :        :        :- Exchange(partition=[8])
                     :        :        :        :        :  +- TableSourceScan(partition=[1])
                     :        :        :        :        +- Exchange(partition=[8])
                     :        :        :        :           +- Calc(partition=[30])
                     :        :        :        :              +- TableSourceScan(partition=[30])
                     :        :        :        +- Exchange(partition=[8])
                     :        :        :           +- TableSourceScan(partition=[7])
                     :        :        +- Exchange(partition=[8])
                     :        :           +- TableSourceScan(partition=[1])
                     :        +- Exchange(partition=[8])
                     :           +- TableSourceScan(partition=[1])
                     +- Exchange(partition=[8])
                        +- TableSourceScan(partition=[1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[08]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$0], dir0=[ASC])
+- LogicalProject(o_year=[$0], mkt_share=[/($1, $2)])
   +- LogicalAggregate(group=[{0}], agg#0=[SUM($1)], agg#1=[SUM($2)])
      +- LogicalProject(o_year=[$0], $f1=[CASE(=($2, 'EGYPT'), $1, 0)], volume=[$1])
         +- LogicalProject(o_year=[EXTRACT(FLAG(YEAR), $36)], volume=[*($21, -(1, $22))], nation=[$54])
            +- LogicalFilter(condition=[AND(=($0, $17), =($9, $18), =($16, $32), =($33, $41), =($44, $49), =($51, $57), =($58, 'MIDDLE EAST'), =($12, $53), >=($36, 1995-01-01), <=($36, 1996-12-31), =($4, 'PROMO BRUSHED COPPER'))])
               +- LogicalJoin(condition=[true], joinType=[inner])
                  :- LogicalJoin(condition=[true], joinType=[inner])
                  :  :- LogicalJoin(condition=[true], joinType=[inner])
                  :  :  :- LogicalJoin(condition=[true], joinType=[inner])
                  :  :  :  :- LogicalJoin(condition=[true], joinType=[inner])
                  :  :  :  :  :- LogicalJoin(condition=[true], joinType=[inner])
                  :  :  :  :  :  :- LogicalJoin(condition=[true], joinType=[inner])
                  :  :  :  :  :  :  :- LogicalTableScan(table=[[part, source: [selectedFields=[p_partkey, p_name, p_mfgr, p_brand, p_type, p_size, p_container, p_retailprice, p_comment]]]])
                  :  :  :  :  :  :  +- LogicalTableScan(table=[[supplier, source: [selectedFields=[s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment]]]])
                  :  :  :  :  :  +- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
                  :  :  :  :  +- LogicalTableScan(table=[[orders, source: [selectedFields=[o_orderkey, o_custkey, o_orderstatus, o_totalprice, o_orderdate, o_orderpriority, o_clerk, o_shippriority, o_comment]]]])
                  :  :  :  +- LogicalTableScan(table=[[customer, source: [selectedFields=[c_custkey, c_name, c_address, c_nationkey, c_phone, c_acctbal, c_mktsegment, c_comment]]]])
                  :  :  +- LogicalTableScan(table=[[nation, source: [selectedFields=[n_nationkey, n_name, n_regionkey, n_comment]]]])
                  :  +- LogicalTableScan(table=[[nation, source: [selectedFields=[n_nationkey, n_name, n_regionkey, n_comment]]]])
                  +- LogicalTableScan(table=[[region, source: [selectedFields=[r_regionkey, r_name, r_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(partition=[1])
+- SortLimit(partition=[1])
   +- Exchange(partition=[1])
      +- SortLimit(partition=[8])
         +- SortAggregate(partition=[8])
            +- Sort(partition=[8])
               +- Exchange(partition=[8])
                  +- LocalSortAggregate(partition=[8])
                     +- Sort(partition=[8])
                        +- Calc(partition=[8])
                           +- NestedLoopJoin(partition=[8])
                              :- Calc(partition=[8])
                              :  +- HashJoin(partition=[8])
                              :     :- Exchange(partition=[8])
                              :     :  +- Calc(partition=[8])
                              :     :     +- HashJoin(partition=[8])
                              :     :        :- Exchange(partition=[8])
                              :     :        :  +- Calc(partition=[8])
                              :     :        :     +- HashJoin(partition=[8])
                              :     :        :        :- Exchange(partition=[8])
                              :     :        :        :  +- Calc(partition=[8])
                              :     :        :        :     +- HashJoin(partition=[8])
                              :     :        :        :        :- Exchange(partition=[8])
                              :     :        :        :        :  +- Calc(partition=[8])
                              :     :        :        :        :     +- HashJoin(partition=[8])
                              :     :        :        :        :        :- Exchange(partition=[8])
                              :     :        :        :        :        :  +- NestedLoopJoin(partition=[1])
                              :     :        :        :        :        :     :- Calc(partition=[1])
                              :     :        :        :        :        :     :  +- TableSourceScan(partition=[1])
                              :     :        :        :        :        :     +- Exchange(partition=[8])
                              :     :        :        :        :        :        +- TableSourceScan(partition=[1])
                              :     :        :        :        :        +- Exchange(partition=[8])
                              :     :        :        :        :           +- TableSourceScan(partition=[30])
                              :     :        :        :        +- Exchange(partition=[8])
                              :     :        :        :           +- Calc(partition=[7])
                              :     :        :        :              +- TableSourceScan(partition=[7])
                              :     :        :        +- Exchange(partition=[8])
                              :     :        :           +- TableSourceScan(partition=[1])
                              :     :        +- Exchange(partition=[8])
                              :     :           +- TableSourceScan(partition=[1])
                              :     +- Exchange(partition=[8])
                              :        +- TableSourceScan(partition=[1])
                              +- Exchange(partition=[8])
                                 +- Calc(partition=[1])
                                    +- TableSourceScan(partition=[1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[09]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[DESC])
+- LogicalAggregate(group=[{0, 1}], sum_profit=[SUM($2)])
   +- LogicalProject(nation=[$47], o_year=[EXTRACT(FLAG(YEAR), $41)], amount=[-(*($21, -(1, $22)), *($35, $20))])
      +- LogicalFilter(condition=[AND(=($9, $18), =($33, $18), =($32, $17), =($0, $17), =($37, $16), =($12, $46), LIKE($1, '%yellow%'))])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalJoin(condition=[true], joinType=[inner])
            :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :  :  :- LogicalTableScan(table=[[part, source: [selectedFields=[p_partkey, p_name, p_mfgr, p_brand, p_type, p_size, p_container, p_retailprice, p_comment]]]])
            :  :  :  :  +- LogicalTableScan(table=[[supplier, source: [selectedFields=[s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment]]]])
            :  :  :  +- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
            :  :  +- LogicalTableScan(table=[[partsupp, source: [selectedFields=[ps_partkey, ps_suppkey, ps_availqty, ps_supplycost, ps_comment]]]])
            :  +- LogicalTableScan(table=[[orders, source: [selectedFields=[o_orderkey, o_custkey, o_orderstatus, o_totalprice, o_orderdate, o_orderpriority, o_clerk, o_shippriority, o_comment]]]])
            +- LogicalTableScan(table=[[nation, source: [selectedFields=[n_nationkey, n_name, n_regionkey, n_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
SortLimit(partition=[1])
+- Exchange(partition=[1])
   +- SortLimit(partition=[8])
      +- HashAggregate(partition=[8])
         +- Exchange(partition=[8])
            +- LocalHashAggregate(partition=[8])
               +- Calc(partition=[8])
                  +- HashJoin(partition=[8])
                     :- Exchange(partition=[8])
                     :  +- Calc(partition=[8])
                     :     +- HashJoin(partition=[8])
                     :        :- Exchange(partition=[8])
                     :        :  +- Calc(partition=[8])
                     :        :     +- HashJoin(partition=[8])
                     :        :        :- Exchange(partition=[8])
                     :        :        :  +- Calc(partition=[8])
                     :        :        :     +- HashJoin(partition=[8])
                     :        :        :        :- Exchange(partition=[8])
                     :        :        :        :  +- NestedLoopJoin(partition=[1])
                     :        :        :        :     :- Exchange(partition=[8])
                     :        :        :        :     :  +- Calc(partition=[1])
                     :        :        :        :     :     +- TableSourceScan(partition=[1])
                     :        :        :        :     +- TableSourceScan(partition=[1])
                     :        :        :        +- Exchange(partition=[8])
                     :        :        :           +- TableSourceScan(partition=[30])
                     :        :        +- Exchange(partition=[8])
                     :        :           +- TableSourceScan(partition=[4])
                     :        +- Exchange(partition=[8])
                     :           +- TableSourceScan(partition=[7])
                     +- Exchange(partition=[8])
                        +- TableSourceScan(partition=[1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[10]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$2], dir0=[DESC], fetch=[20])
+- LogicalProject(c_custkey=[$0], c_name=[$1], revenue=[$7], c_acctbal=[$2], n_name=[$4], c_address=[$5], c_phone=[$3], c_comment=[$6])
   +- LogicalAggregate(group=[{0, 1, 2, 3, 4, 5, 6}], revenue=[SUM($7)])
      +- LogicalProject(c_custkey=[$0], c_name=[$1], c_acctbal=[$5], c_phone=[$4], n_name=[$34], c_address=[$2], c_comment=[$7], $f7=[*($22, -(1, $23))])
         +- LogicalFilter(condition=[AND(=($0, $9), =($17, $8), >=($12, 1994-03-01), <($12, DATETIME_PLUS(1994-03-01, 3)), =($25, 'R'), =($3, $33))])
            +- LogicalJoin(condition=[true], joinType=[inner])
               :- LogicalJoin(condition=[true], joinType=[inner])
               :  :- LogicalJoin(condition=[true], joinType=[inner])
               :  :  :- LogicalTableScan(table=[[customer, source: [selectedFields=[c_custkey, c_name, c_address, c_nationkey, c_phone, c_acctbal, c_mktsegment, c_comment]]]])
               :  :  +- LogicalTableScan(table=[[orders, source: [selectedFields=[o_orderkey, o_custkey, o_orderstatus, o_totalprice, o_orderdate, o_orderpriority, o_clerk, o_shippriority, o_comment]]]])
               :  +- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
               +- LogicalTableScan(table=[[nation, source: [selectedFields=[n_nationkey, n_name, n_regionkey, n_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(partition=[1])
+- SortLimit(partition=[1])
   +- Exchange(partition=[1])
      +- SortLimit(partition=[8])
         +- HashAggregate(partition=[8])
            +- Exchange(partition=[8])
               +- LocalHashAggregate(partition=[8])
                  +- Calc(partition=[8])
                     +- HashJoin(partition=[8])
                        :- Exchange(partition=[8])
                        :  +- Calc(partition=[8])
                        :     +- HashJoin(partition=[8])
                        :        :- Exchange(partition=[8])
                        :        :  +- Calc(partition=[8])
                        :        :     +- HashJoin(partition=[8])
                        :        :        :- Exchange(partition=[8])
                        :        :        :  +- TableSourceScan(partition=[1])
                        :        :        +- Exchange(partition=[8])
                        :        :           +- Calc(partition=[7])
                        :        :              +- TableSourceScan(partition=[7])
                        :        +- Exchange(partition=[8])
                        :           +- Calc(partition=[30])
                        :              +- TableSourceScan(partition=[30])
                        +- Exchange(partition=[8])
                           +- TableSourceScan(partition=[1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[11]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$1], dir0=[DESC])
+- LogicalFilter(condition=[>($1, $SCALAR_QUERY({
LogicalProject(EXPR$0=[*($0, 0.0001000000)])
  LogicalAggregate(group=[{}], agg#0=[SUM($0)])
    LogicalProject($f0=[*($3, $2)])
      LogicalFilter(condition=[AND(=($1, $5), =($8, $12), =($13, 'JAPAN'))])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalTableScan(table=[[partsupp, source: [selectedFields=[ps_partkey, ps_suppkey, ps_availqty, ps_supplycost, ps_comment]]]])
            LogicalTableScan(table=[[supplier, source: [selectedFields=[s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment]]]])
          LogicalTableScan(table=[[nation, source: [selectedFields=[n_nationkey, n_name, n_regionkey, n_comment]]]])
}))])
   +- LogicalAggregate(group=[{0}], value=[SUM($1)])
      +- LogicalProject(ps_partkey=[$0], $f1=[*($3, $2)])
         +- LogicalFilter(condition=[AND(=($1, $5), =($8, $12), =($13, 'JAPAN'))])
            +- LogicalJoin(condition=[true], joinType=[inner])
               :- LogicalJoin(condition=[true], joinType=[inner])
               :  :- LogicalTableScan(table=[[partsupp, source: [selectedFields=[ps_partkey, ps_suppkey, ps_availqty, ps_supplycost, ps_comment]]]])
               :  +- LogicalTableScan(table=[[supplier, source: [selectedFields=[s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment]]]])
               +- LogicalTableScan(table=[[nation, source: [selectedFields=[n_nationkey, n_name, n_regionkey, n_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(partition=[1])
+- SortLimit(partition=[1])
   +- Exchange(partition=[1])
      +- SortLimit(partition=[8])
         +- NestedLoopJoin(partition=[8])
            :- HashAggregate(partition=[8])
            :  +- Exchange(partition=[8])
            :     +- LocalHashAggregate(partition=[8])
            :        +- Calc(partition=[8])
            :           +- NestedLoopJoin(partition=[8])
            :              :- Calc(partition=[8])
            :              :  +- HashJoin(partition=[8])
            :              :     :- Exchange(partition=[8])
            :              :     :  +- TableSourceScan(partition=[4])
            :              :     +- Exchange(partition=[8])
            :              :        +- TableSourceScan(partition=[1])
            :              +- Exchange(partition=[8])
            :                 +- Calc(partition=[1])
            :                    +- TableSourceScan(partition=[1])
            +- Exchange(partition=[8])
               +- SortAggregate(partition=[1])
                  +- Exchange(partition=[1])
                     +- Calc(partition=[1])
                        +- SortAggregate(partition=[1])
                           +- Exchange(partition=[1])
                              +- LocalSortAggregate(partition=[8])
                                 +- Calc(partition=[8])
                                    +- NestedLoopJoin(partition=[8])
                                       :- Calc(partition=[8])
                                       :  +- HashJoin(partition=[8])
                                       :     :- Exchange(partition=[8])
                                       :     :  +- TableSourceScan(partition=[4])
                                       :     +- Exchange(partition=[8])
                                       :        +- TableSourceScan(partition=[1])
                                       +- Exchange(partition=[8])
                                          +- Calc(partition=[1])
                                             +- TableSourceScan(partition=[1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[12]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$0], dir0=[ASC])
+- LogicalAggregate(group=[{0}], high_line_count=[SUM($1)], low_line_count=[SUM($2)])
   +- LogicalProject(l_shipmode=[$23], $f1=[CASE(OR(=($5, '1-URGENT'), =($5, '2-HIGH')), 1, 0)], $f2=[CASE(AND(<>($5, '1-URGENT'), <>($5, '2-HIGH')), 1, 0)])
      +- LogicalFilter(condition=[AND(=($0, $9), OR(=($23, 'TRUCK'), =($23, 'REG AIR')), <($20, $21), <($19, $20), >=($21, 1994-01-01), <($21, DATETIME_PLUS(1994-01-01, 12)))])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalTableScan(table=[[orders, source: [selectedFields=[o_orderkey, o_custkey, o_orderstatus, o_totalprice, o_orderdate, o_orderpriority, o_clerk, o_shippriority, o_comment]]]])
            +- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
SortLimit(partition=[1])
+- Exchange(partition=[1])
   +- SortLimit(partition=[8])
      +- HashAggregate(partition=[8])
         +- Exchange(partition=[8])
            +- LocalHashAggregate(partition=[8])
               +- Calc(partition=[8])
                  +- HashJoin(partition=[8])
                     :- Exchange(partition=[8])
                     :  +- TableSourceScan(partition=[7])
                     +- Exchange(partition=[8])
                        +- Calc(partition=[30])
                           +- TableSourceScan(partition=[30])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[13]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$1], sort1=[$0], dir0=[DESC], dir1=[DESC])
+- LogicalAggregate(group=[{0}], custdist=[COUNT()])
   +- LogicalProject(c_count=[$1])
      +- LogicalAggregate(group=[{0}], EXPR$1=[COUNT($1)])
         +- LogicalProject(c_custkey=[$0], o_orderkey=[$8])
            +- LogicalProject(c_custkey=[$0], c_name=[$1], c_address=[$2], c_nationkey=[$3], c_phone=[$4], c_acctbal=[$5], c_mktsegment=[$6], c_comment=[$7], o_orderkey=[$8], o_custkey=[$9], o_orderstatus=[$10], o_totalprice=[$11], o_orderdate=[$12], o_orderpriority=[$13], o_clerk=[$14], o_shippriority=[$15], o_comment=[$16])
               +- LogicalJoin(condition=[AND(=($0, $9), $17)], joinType=[left])
                  :- LogicalTableScan(table=[[customer, source: [selectedFields=[c_custkey, c_name, c_address, c_nationkey, c_phone, c_acctbal, c_mktsegment, c_comment]]]])
                  +- LogicalProject(o_orderkey=[$0], o_custkey=[$1], o_orderstatus=[$2], o_totalprice=[$3], o_orderdate=[$4], o_orderpriority=[$5], o_clerk=[$6], o_shippriority=[$7], o_comment=[$8], $f9=[NOT(LIKE($8, '%special%requests%'))])
                     +- LogicalTableScan(table=[[orders, source: [selectedFields=[o_orderkey, o_custkey, o_orderstatus, o_totalprice, o_orderdate, o_orderpriority, o_clerk, o_shippriority, o_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
SortLimit(partition=[1])
+- Exchange(partition=[1])
   +- SortLimit(partition=[8])
      +- HashAggregate(partition=[8])
         +- Exchange(partition=[8])
            +- LocalHashAggregate(partition=[8])
               +- Calc(partition=[8])
                  +- HashAggregate(partition=[8])
                     +- Exchange(partition=[8])
                        +- LocalHashAggregate(partition=[8])
                           +- Calc(partition=[8])
                              +- HashJoin(partition=[8])
                                 :- Exchange(partition=[8])
                                 :  +- TableSourceScan(partition=[1])
                                 +- Exchange(partition=[8])
                                    +- Calc(partition=[7])
                                       +- TableSourceScan(partition=[7])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[14]">
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(promo_revenue=[/(*(100.00, $0), $1)])
+- LogicalAggregate(group=[{}], agg#0=[SUM($0)], agg#1=[SUM($1)])
   +- LogicalProject($f0=[CASE(LIKE($20, 'PROMO%'), *($5, -(1, $6)), 0)], $f1=[*($5, -(1, $6))])
      +- LogicalFilter(condition=[AND(=($1, $16), >=($10, 1994-08-01), <($10, DATETIME_PLUS(1994-08-01, 1)))])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
            +- LogicalTableScan(table=[[part, source: [selectedFields=[p_partkey, p_name, p_mfgr, p_brand, p_type, p_size, p_container, p_retailprice, p_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(partition=[1])
+- HashAggregate(partition=[1])
   +- Exchange(partition=[1])
      +- LocalHashAggregate(partition=[8])
         +- Calc(partition=[8])
            +- HashJoin(partition=[8])
               :- Exchange(partition=[8])
               :  +- Calc(partition=[30])
               :     +- TableSourceScan(partition=[30])
               +- Exchange(partition=[8])
                  +- TableSourceScan(partition=[1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[15_1]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$0], dir0=[ASC])
+- LogicalProject(s_suppkey=[$0], s_name=[$1], s_address=[$2], s_phone=[$4], total_revenue=[$8])
   +- LogicalFilter(condition=[AND(=($0, $7), =($8, $SCALAR_QUERY({
LogicalAggregate(group=[{}], EXPR$0=[MAX($0)])
  LogicalProject(total_revenue=[$1])
    LogicalAggregate(group=[{0}], total_revenue=[SUM($1)])
      LogicalProject(supplier_no=[$2], $f1=[*($5, -(1, $6))])
        LogicalFilter(condition=[AND(>=($10, 1993-05-01), <($10, DATETIME_PLUS(1993-05-01, 3)))])
          LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
})))])
      +- LogicalJoin(condition=[true], joinType=[inner])
         :- LogicalTableScan(table=[[supplier, source: [selectedFields=[s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment]]]])
         +- LogicalAggregate(group=[{0}], total_revenue=[SUM($1)])
            +- LogicalProject(supplier_no=[$2], $f1=[*($5, -(1, $6))])
               +- LogicalFilter(condition=[AND(>=($10, 1993-05-01), <($10, DATETIME_PLUS(1993-05-01, 3)))])
                  +- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(partition=[1])
+- SortLimit(partition=[1])
   +- Exchange(partition=[1])
      +- SortLimit(partition=[8])
         +- NestedLoopJoin(partition=[8])
            :- Calc(partition=[8])
            :  +- HashJoin(partition=[8])
            :     :- Exchange(partition=[8])
            :     :  +- TableSourceScan(partition=[1])
            :     +- Exchange(partition=[8])
            :        +- HashAggregate(partition=[8])
            :           +- Exchange(partition=[8])
            :              +- LocalHashAggregate(partition=[30])
            :                 +- Calc(partition=[30])
            :                    +- TableSourceScan(partition=[30])
            +- Exchange(partition=[8])
               +- HashAggregate(partition=[1])
                  +- Exchange(partition=[1])
                     +- LocalHashAggregate(partition=[8])
                        +- Calc(partition=[8])
                           +- HashAggregate(partition=[8])
                              +- Exchange(partition=[8])
                                 +- LocalHashAggregate(partition=[30])
                                    +- Calc(partition=[30])
                                       +- TableSourceScan(partition=[30])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[16]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$3], sort1=[$0], sort2=[$1], sort3=[$2], dir0=[DESC], dir1=[ASC], dir2=[ASC], dir3=[ASC])
+- LogicalAggregate(group=[{0, 1, 2}], supplier_cnt=[COUNT(DISTINCT $3)])
   +- LogicalProject(p_brand=[$8], p_type=[$9], p_size=[$10], ps_suppkey=[$1])
      +- LogicalFilter(condition=[AND(=($5, $0), <>($8, 'Brand#21'), NOT(LIKE($9, 'MEDIUM PLATED%')), OR(=($10, 38), =($10, 2), =($10, 8), =($10, 31), =($10, 44), =($10, 5), =($10, 14), =($10, 24)), NOT(IN($1, {
LogicalProject(s_suppkey=[$0])
  LogicalFilter(condition=[LIKE($6, '%Customer%Complaints%')])
    LogicalTableScan(table=[[supplier, source: [selectedFields=[s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment]]]])
})))])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalTableScan(table=[[partsupp, source: [selectedFields=[ps_partkey, ps_suppkey, ps_availqty, ps_supplycost, ps_comment]]]])
            +- LogicalTableScan(table=[[part, source: [selectedFields=[p_partkey, p_name, p_mfgr, p_brand, p_type, p_size, p_container, p_retailprice, p_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
SortLimit(partition=[1])
+- Exchange(partition=[1])
   +- SortLimit(partition=[8])
      +- HashAggregate(partition=[8])
         +- Exchange(partition=[8])
            +- LocalHashAggregate(partition=[8])
               +- HashAggregate(partition=[8])
                  +- Exchange(partition=[8])
                     +- LocalHashAggregate(partition=[8])
                        +- NestedLoopJoin(partition=[8])
                           :- Calc(partition=[8])
                           :  +- HashJoin(partition=[8])
                           :     :- Exchange(partition=[8])
                           :     :  +- TableSourceScan(partition=[4])
                           :     +- Exchange(partition=[8])
                           :        +- Calc(partition=[1])
                           :           +- TableSourceScan(partition=[1])
                           +- Exchange(partition=[8])
                              +- Calc(partition=[1])
                                 +- TableSourceScan(partition=[1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[17]">
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(avg_yearly=[/($0, 7.0)])
+- LogicalAggregate(group=[{}], agg#0=[SUM($0)])
   +- LogicalProject(l_extendedprice=[$5])
      +- LogicalFilter(condition=[AND(=($16, $1), =($19, 'Brand#13'), =($22, 'JUMBO CAN'), <($4, $SCALAR_QUERY({
LogicalProject(EXPR$0=[*(0.2, $0)])
  LogicalAggregate(group=[{}], agg#0=[AVG($0)])
    LogicalProject(l_quantity=[$4])
      LogicalFilter(condition=[=($1, $cor0.p_partkey)])
        LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
})))], variablesSet=[[$cor0]])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
            +- LogicalTableScan(table=[[part, source: [selectedFields=[p_partkey, p_name, p_mfgr, p_brand, p_type, p_size, p_container, p_retailprice, p_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(partition=[1])
+- HashAggregate(partition=[1])
   +- Exchange(partition=[1])
      +- LocalHashAggregate(partition=[8])
         +- Calc(partition=[8])
            +- HashJoin(partition=[8])
               :- Exchange(partition=[8])
               :  +- Calc(partition=[8])
               :     +- HashJoin(partition=[8])
               :        :- Exchange(partition=[8])
               :        :  +- TableSourceScan(partition=[30])
               :        +- Exchange(partition=[8])
               :           +- Calc(partition=[1])
               :              +- TableSourceScan(partition=[1])
               +- Exchange(partition=[8])
                  +- HashAggregate(partition=[8])
                     +- Exchange(partition=[8])
                        +- LocalHashAggregate(partition=[30])
                           +- Calc(partition=[30])
                              +- TableSourceScan(partition=[30])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[18]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$4], sort1=[$3], dir0=[DESC], dir1=[ASC], fetch=[100])
+- LogicalAggregate(group=[{0, 1, 2, 3, 4}], EXPR$5=[SUM($5)])
   +- LogicalProject(c_name=[$1], c_custkey=[$0], o_orderkey=[$8], o_orderdate=[$12], o_totalprice=[$11], l_quantity=[$21])
      +- LogicalFilter(condition=[AND(IN($8, {
LogicalProject(l_orderkey=[$0])
  LogicalFilter(condition=[>($1, 300)])
    LogicalAggregate(group=[{0}], agg#0=[SUM($1)])
      LogicalProject(l_orderkey=[$0], l_quantity=[$4])
        LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
}), =($0, $9), =($8, $17))])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalJoin(condition=[true], joinType=[inner])
            :  :- LogicalTableScan(table=[[customer, source: [selectedFields=[c_custkey, c_name, c_address, c_nationkey, c_phone, c_acctbal, c_mktsegment, c_comment]]]])
            :  +- LogicalTableScan(table=[[orders, source: [selectedFields=[o_orderkey, o_custkey, o_orderstatus, o_totalprice, o_orderdate, o_orderpriority, o_clerk, o_shippriority, o_comment]]]])
            +- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
SortLimit(partition=[1])
+- Exchange(partition=[1])
   +- SortLimit(partition=[8])
      +- HashAggregate(partition=[8])
         +- Exchange(partition=[8])
            +- LocalHashAggregate(partition=[30])
               +- Calc(partition=[30])
                  +- NestedLoopJoin(partition=[30])
                     :- Exchange(partition=[8])
                     :  +- HashJoin(partition=[8])
                     :     :- Exchange(partition=[8])
                     :     :  +- Calc(partition=[8])
                     :     :     +- HashJoin(partition=[8])
                     :     :        :- Exchange(partition=[8])
                     :     :        :  +- TableSourceScan(partition=[1])
                     :     :        +- Exchange(partition=[8])
                     :     :           +- TableSourceScan(partition=[7])
                     :     +- Exchange(partition=[8])
                     :        +- Calc(partition=[8])
                     :           +- HashAggregate(partition=[8])
                     :              +- Exchange(partition=[8])
                     :                 +- LocalHashAggregate(partition=[30])
                     :                    +- TableSourceScan(partition=[30])
                     +- TableSourceScan(partition=[30])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[19]">
    <Resource name="planBefore">
      <![CDATA[
LogicalAggregate(group=[{}], revenue=[SUM($0)])
+- LogicalProject($f0=[*($5, -(1, $6))])
   +- LogicalFilter(condition=[OR(AND(=($16, $1), =($19, 'Brand#41'), OR(=($22, 'SM CASE'), =($22, 'SM BOX'), =($22, 'SM PACK'), =($22, 'SM PKG')), >=($4, 2), <=($4, +(2, 10)), >=($21, 1), <=($21, 5), OR(=($14, 'AIR'), =($14, 'AIR REG')), =($13, 'DELIVER IN PERSON')), AND(=($16, $1), =($19, 'Brand#13'), OR(=($22, 'MED BAG'), =($22, 'MED BOX'), =($22, 'MED PKG'), =($22, 'MED PACK')), >=($4, 14), <=($4, +(14, 10)), >=($21, 1), <=($21, 10), OR(=($14, 'AIR'), =($14, 'AIR REG')), =($13, 'DELIVER IN PERSON')), AND(=($16, $1), =($19, 'Brand#55'), OR(=($22, 'LG CASE'), =($22, 'LG BOX'), =($22, 'LG PACK'), =($22, 'LG PKG')), >=($4, 23), <=($4, +(23, 10)), >=($21, 1), <=($21, 15), OR(=($14, 'AIR'), =($14, 'AIR REG')), =($13, 'DELIVER IN PERSON')))])
      +- LogicalJoin(condition=[true], joinType=[inner])
         :- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
         +- LogicalTableScan(table=[[part, source: [selectedFields=[p_partkey, p_name, p_mfgr, p_brand, p_type, p_size, p_container, p_retailprice, p_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
SortAggregate(partition=[1])
+- Exchange(partition=[1])
   +- LocalSortAggregate(partition=[8])
      +- Calc(partition=[8])
         +- HashJoin(partition=[8])
            :- Exchange(partition=[8])
            :  +- Calc(partition=[30])
            :     +- TableSourceScan(partition=[30])
            +- Exchange(partition=[8])
               +- Calc(partition=[1])
                  +- TableSourceScan(partition=[1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[20]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$0], dir0=[ASC])
+- LogicalProject(s_name=[$1], s_address=[$2])
   +- LogicalFilter(condition=[AND(IN($0, {
LogicalProject(ps_suppkey=[$1])
  LogicalFilter(condition=[AND(IN($0, {
LogicalProject(p_partkey=[$0])
  LogicalFilter(condition=[LIKE($1, 'antique%')])
    LogicalTableScan(table=[[part, source: [selectedFields=[p_partkey, p_name, p_mfgr, p_brand, p_type, p_size, p_container, p_retailprice, p_comment]]]])
}), >($2, $SCALAR_QUERY({
LogicalProject(EXPR$0=[*(0.5, $0)])
  LogicalAggregate(group=[{}], agg#0=[SUM($0)])
    LogicalProject(l_quantity=[$4])
      LogicalFilter(condition=[AND(=($1, $cor0.ps_partkey), =($2, $cor0.ps_suppkey), >=($10, 1993-01-01), <($10, DATETIME_PLUS(1993-01-01, 12)))])
        LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
})))], variablesSet=[[$cor0]])
    LogicalTableScan(table=[[partsupp, source: [selectedFields=[ps_partkey, ps_suppkey, ps_availqty, ps_supplycost, ps_comment]]]])
}), =($3, $7), =($8, 'KENYA'))])
      +- LogicalJoin(condition=[true], joinType=[inner])
         :- LogicalTableScan(table=[[supplier, source: [selectedFields=[s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment]]]])
         +- LogicalTableScan(table=[[nation, source: [selectedFields=[n_nationkey, n_name, n_regionkey, n_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
SortLimit(partition=[1])
+- Exchange(partition=[1])
   +- SortLimit(partition=[1])
      +- Calc(partition=[1])
         +- NestedLoopJoin(partition=[1])
            :- Exchange(partition=[8])
            :  +- Calc(partition=[8])
            :     +- HashJoin(partition=[8])
            :        :- Exchange(partition=[8])
            :        :  +- TableSourceScan(partition=[1])
            :        +- Exchange(partition=[8])
            :           +- Calc(partition=[8])
            :              +- NestedLoopJoin(partition=[8])
            :                 :- HashJoin(partition=[8])
            :                 :  :- Exchange(partition=[8])
            :                 :  :  +- TableSourceScan(partition=[4])
            :                 :  +- Exchange(partition=[8])
            :                 :     +- Calc(partition=[1])
            :                 :        +- TableSourceScan(partition=[1])
            :                 +- Exchange(partition=[8])
            :                    +- HashAggregate(partition=[8])
            :                       +- Exchange(partition=[8])
            :                          +- LocalHashAggregate(partition=[30])
            :                             +- Calc(partition=[30])
            :                                +- TableSourceScan(partition=[30])
            +- Calc(partition=[1])
               +- TableSourceScan(partition=[1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[21]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$1], sort1=[$0], dir0=[DESC], dir1=[ASC], fetch=[100])
+- LogicalAggregate(group=[{0}], numwait=[COUNT()])
   +- LogicalProject(s_name=[$1])
      +- LogicalFilter(condition=[AND(=($0, $9), =($23, $7), =($25, 'F'), >($19, $18), EXISTS({
LogicalFilter(condition=[AND(=($0, $cor0.l_orderkey), <>($2, $cor0.l_suppkey))])
  LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
}), NOT(EXISTS({
LogicalFilter(condition=[AND(=($0, $cor0.l_orderkey), <>($2, $cor0.l_suppkey), >($12, $11))])
  LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
})), =($3, $32), =($33, 'BRAZIL'))], variablesSet=[[$cor0]])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalJoin(condition=[true], joinType=[inner])
            :  :- LogicalJoin(condition=[true], joinType=[inner])
            :  :  :- LogicalTableScan(table=[[supplier, source: [selectedFields=[s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment]]]])
            :  :  +- LogicalTableScan(table=[[lineitem, source: [selectedFields=[l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment]]]])
            :  +- LogicalTableScan(table=[[orders, source: [selectedFields=[o_orderkey, o_custkey, o_orderstatus, o_totalprice, o_orderdate, o_orderpriority, o_clerk, o_shippriority, o_comment]]]])
            +- LogicalTableScan(table=[[nation, source: [selectedFields=[n_nationkey, n_name, n_regionkey, n_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
SortLimit(partition=[1])
+- Exchange(partition=[1])
   +- SortLimit(partition=[8])
      +- HashAggregate(partition=[8])
         +- Exchange(partition=[8])
            +- LocalHashAggregate(partition=[8])
               +- Calc(partition=[8])
                  +- HashJoin(partition=[8])
                     :- Exchange(partition=[8])
                     :  +- HashJoin(partition=[8])
                     :     :- Exchange(partition=[8])
                     :     :  +- Calc(partition=[8])
                     :     :     +- NestedLoopJoin(partition=[8])
                     :     :        :- Calc(partition=[8])
                     :     :        :  +- HashJoin(partition=[8])
                     :     :        :     :- Exchange(partition=[8])
                     :     :        :     :  +- Calc(partition=[8])
                     :     :        :     :     +- HashJoin(partition=[8])
                     :     :        :     :        :- Exchange(partition=[8])
                     :     :        :     :        :  +- TableSourceScan(partition=[1])
                     :     :        :     :        +- Exchange(partition=[8])
                     :     :        :     :           +- Calc(partition=[30])
                     :     :        :     :              +- TableSourceScan(partition=[30])
                     :     :        :     +- Exchange(partition=[8])
                     :     :        :        +- Calc(partition=[7])
                     :     :        :           +- TableSourceScan(partition=[7])
                     :     :        +- Exchange(partition=[8])
                     :     :           +- Calc(partition=[1])
                     :     :              +- TableSourceScan(partition=[1])
                     :     +- Exchange(partition=[8])
                     :        +- TableSourceScan(partition=[30])
                     +- Exchange(partition=[8])
                        +- Calc(partition=[30])
                           +- TableSourceScan(partition=[30])
]]>
    </Resource>
  </TestCase>
  <TestCase name="test[22]">
    <Resource name="planBefore">
      <![CDATA[
LogicalSort(sort0=[$0], dir0=[ASC])
+- LogicalAggregate(group=[{0}], numcust=[COUNT()], totacctbal=[SUM($1)])
   +- LogicalProject(cntrycode=[SUBSTRING($4, 1, 2)], c_acctbal=[$5])
      +- LogicalFilter(condition=[AND(OR(=(SUBSTRING($4, 1, 2), '24'), =(SUBSTRING($4, 1, 2), '31'), =(SUBSTRING($4, 1, 2), '11'), =(SUBSTRING($4, 1, 2), '16'), =(SUBSTRING($4, 1, 2), '21'), =(SUBSTRING($4, 1, 2), '20'), =(SUBSTRING($4, 1, 2), '34')), >($5, $SCALAR_QUERY({
LogicalAggregate(group=[{}], EXPR$0=[AVG($0)])
  LogicalProject(c_acctbal=[$5])
    LogicalFilter(condition=[AND(>($5, 0.00), OR(=(SUBSTRING($4, 1, 2), '24'), =(SUBSTRING($4, 1, 2), '31'), =(SUBSTRING($4, 1, 2), '11'), =(SUBSTRING($4, 1, 2), '16'), =(SUBSTRING($4, 1, 2), '21'), =(SUBSTRING($4, 1, 2), '20'), =(SUBSTRING($4, 1, 2), '34')))])
      LogicalTableScan(table=[[customer, source: [selectedFields=[c_custkey, c_name, c_address, c_nationkey, c_phone, c_acctbal, c_mktsegment, c_comment]]]])
})), NOT(EXISTS({
LogicalFilter(condition=[=($1, $cor0.c_custkey)])
  LogicalTableScan(table=[[orders, source: [selectedFields=[o_orderkey, o_custkey, o_orderstatus, o_totalprice, o_orderdate, o_orderpriority, o_clerk, o_shippriority, o_comment]]]])
})))], variablesSet=[[$cor0]])
         +- LogicalTableScan(table=[[customer, source: [selectedFields=[c_custkey, c_name, c_address, c_nationkey, c_phone, c_acctbal, c_mktsegment, c_comment]]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
SortLimit(partition=[1])
+- Exchange(partition=[1])
   +- SortLimit(partition=[8])
      +- SortAggregate(partition=[8])
         +- Sort(partition=[8])
            +- Exchange(partition=[8])
               +- LocalSortAggregate(partition=[8])
                  +- Sort(partition=[8])
                     +- Calc(partition=[8])
                        +- NestedLoopJoin(partition=[8])
                           :- Calc(partition=[8])
                           :  +- HashJoin(partition=[8])
                           :     :- Exchange(partition=[8])
                           :     :  +- TableSourceScan(partition=[1])
                           :     +- Exchange(partition=[8])
                           :        +- TableSourceScan(partition=[7])
                           +- Exchange(partition=[8])
                              +- HashAggregate(partition=[1])
                                 +- Exchange(partition=[1])
                                    +- LocalHashAggregate(partition=[1])
                                       +- Calc(partition=[1])
                                          +- TableSourceScan(partition=[1])
]]>
    </Resource>
  </TestCase>
</Root>
